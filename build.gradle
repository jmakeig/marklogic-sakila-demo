buildscript {
  // Load MarkLogic properties from the Spring Boot properties file to avoid duplication
  Properties props = new Properties()
  props.load(new FileInputStream("src/main/resources/application.properties"))
  props.each { prop ->
    // Don't set the property if it's already been set, e.g. via -P on the command line
    if (prop.key.startsWith("ml") && !project.hasProperty(prop.key)) {
      project.ext.set(prop.key, prop.value)
    }
  }

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE")
	}
}

plugins {
	id "java"
	id "eclipse"
  id "com.marklogic.ml-gradle" version "2.0"
}

apply plugin: 'spring-boot'

sourceCompatibility = 1.7
targetCompatibility = 1.7

springBoot {
	executable = true
	mainClass = "org.example.App"
}

repositories {
  jcenter()

  // For mlcp-util
  maven {url "https://dl.bintray.com/rjrudin/maven/"}

  // Needed for mlcp and its Hadoop dependencies
  maven {url "http://developer.marklogic.com/maven2/"}
  maven {url "http://repository.cloudera.com/artifactory/cloudera-repos/" }
}

dependencies {
  // Main Boot library for running a webapp
  compile("org.springframework.boot:spring-boot-starter-web")

  // Adds Spring Security integration
  compile("org.springframework.boot:spring-boot-starter-security")

  // Adds Thymeleaf integration; Thymeleaf is used for the main HTML templates
  compile("org.springframework.boot:spring-boot-starter-thymeleaf")

  // Optional Boot library - see https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-devtools.html
  compile("org.springframework.boot:spring-boot-devtools")

  // Provides integration points between Boot and MarkLogic
  compile "com.marklogic:marklogic-spring-web:0.1.2"

  // Needed for loading modules into MarkLogic
  compile "com.marklogic:ml-javaclient-util:2.7.1"

  // Needed for the SQL migration tool
  compile "com.marklogic:marklogic-spring-batch:0.1.1"
  runtime "mysql:mysql-connector-java:5.1.6"

  // Needed for writing JUnit tests with ml-junit
  testCompile "com.marklogic:ml-junit:2.5"
}

// Tell Spring Boot, when run by Gradle, to watch the resources directory
bootRun {
  addResources = true
}
